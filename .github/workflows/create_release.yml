name: create release

on:
  workflow_dispatch:

jobs:
  create:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main

      - name: LastRelease
        id: last
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          last_tag=`gh release view --json tagName --jq .tagName`
          echo $last_tag
          echo "last_tag=$last_tag" >> "$GITHUB_OUTPUT"
          echo "repo=${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}" >> $GITHUB_OUTPUT

      - name : Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
          
      - name : Run Deno
        id: deno
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LAST_TAG: ${{ steps.last.outputs.last_tag }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ steps.last.outputs.repo }}
        run: |
          next=`deno run --allow-read  --allow-write --allow-env --allow-net .deno/release.ts`
          echo $next
          echo "next=$next" >> "$GITHUB_OUTPUT"

      - name: Commit & Push
        run: |
          version=${{ steps.deno.outputs.next }}
          git config user.name "actions-user"
          git config user.email "action@github.com"
          git add .
          git commit -m $version
          git tag $version
          git push --tags
        
      - name: Create Release
        run: |
          version=${{ steps.deno.outputs.next }}
          owner=${{ github.repository_owner }}
          repo=${{ steps.last.outputs.repo }}
          token=${{ secrets.GITHUB_TOKEN }}
          echo "{"tag_name":${version},"target_commitish":"main","draft":false,"prerelease":false,"generate_release_notes":false}"
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer token ${token}"\
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${owner}/${repo}/releases \
          -d "{"tag_name":${version},"target_commitish":"main","draft":false,"prerelease":false,"generate_release_notes":false}"







# 最後のリリースのタグを取得
# 作成されるであろうリリースノートを取得
# 内容を元にセマンティックバージョンを上げる
# もう一度リリースノートを作成してCHANGELOGに追記
# READMEとCHAGELOGをコピー
# コミットする
# タグを付ける
# プッシュ
# タグでリリースを作成
